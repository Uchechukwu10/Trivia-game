{"version":3,"sources":["components/FormView.js","components/Question.js","components/Search.js","components/QuestionView.js","components/Header.js","components/QuizView.js","App.js","index.js"],"names":["FormView","props","_this","Object","classCallCheck","this","_super","call","submitQuestion","event","preventDefault","$","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","setState","defineProperty","target","name","value","categories","_this2","_this3","react_default","a","createElement","id","className","onSubmit","onChange","keys","map","key","Component","Question","visibleAnswer","_this$props","alt","concat","toLowerCase","src","onClick","questionAction","flipVisibility","style","visibility","Search","query","getInfo","submitSearch","handleInputChange","search","placeholder","ref","input","QuestionView","getQuestions","page","questions","totalQuestions","total_questions","currentCategory","current_category","console","log","getByCategory","searchTerm","action","window","confirm","num","pageNumbers","maxPage","Math","ceil","_loop","i","push","selectPage","_this4","components_Search","q","ind","components_Question","createPagination","Header","uri","location","href","origin","navTo","QuizView","selectCategory","_ref","_ref$id","quizCategory","getNextQuestion","previousQuestions","toConsumableArray","currentQuestion","previous_questions","quiz_category","showAnswer","guess","forceEnd","submitGuess","evaluate","evaluateAnswer","numCorrect","restartGame","formatGuess","replace","split","every","el","includes","length","renderFinalScore","renderCorrectAnswer","renderPlay","renderPrePlay","App","components_Header","path","react_router_dom","react_router","exact","component","ReactDOM","render","src_App"],"mappings":"2XA6GeA,2DAxGb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,OAyBFG,eAAiB,SAACC,GAChBA,EAAMC,iBACNC,IAAEC,KAAK,CACLC,IAAK,aACLC,KAAM,OACNC,SAAU,OACVC,YAAa,mBACbC,KAAMC,KAAKC,UAAU,CACnBC,SAAUlB,EAAKmB,MAAMD,SACrBE,OAAQpB,EAAKmB,MAAMC,OACnBC,WAAYrB,EAAKmB,MAAME,WACvBC,SAAUtB,EAAKmB,MAAMG,WAEvBC,UAAW,CACTC,iBAAiB,GAEnBC,aAAa,EACbC,QAAS,SAACC,GACRC,SAASC,eAAe,qBAAqBC,SAG/CC,MAAO,SAACA,GACNC,MAAM,6DAhDOhC,EAsDnBiC,aAAe,SAAC1B,GACdP,EAAKkC,SAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GAAiBM,EAAM6B,OAAOC,KAAO9B,EAAM6B,OAAOE,SArDlDtC,EAAKmB,MAAQ,CACXD,SAAU,GACVE,OAAQ,GACRC,WAAY,EACZC,SAAU,EACViB,WAAY,IAPGvC,uDAWnB,WAAoB,IAAAwC,EAAArC,KAClBM,IAAEC,KAAK,CACLC,IAAG,cACHC,KAAM,MACNc,QAAS,SAACC,GACRa,EAAKN,SAAS,CAAEK,WAAYZ,EAAOY,cAGrCR,MAAO,SAACA,GACNC,MAAM,qFAsCZ,WAAS,IAAAS,EAAAtC,KACP,OACEuC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACNH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,QACEE,UAAU,YACVD,GAAG,oBACHE,SAAU5C,KAAKG,gBAEfoC,EAAAC,EAAAC,cAAA,wBAEEF,EAAAC,EAAAC,cAAA,SAAOhC,KAAK,OAAOyB,KAAK,WAAWW,SAAU7C,KAAK8B,gBAEpDS,EAAAC,EAAAC,cAAA,sBAEEF,EAAAC,EAAAC,cAAA,SAAOhC,KAAK,OAAOyB,KAAK,SAASW,SAAU7C,KAAK8B,gBAElDS,EAAAC,EAAAC,cAAA,0BAEEF,EAAAC,EAAAC,cAAA,UAAQP,KAAK,aAAaW,SAAU7C,KAAK8B,cACvCS,EAAAC,EAAAC,cAAA,UAAQN,MAAM,KAAd,KACAI,EAAAC,EAAAC,cAAA,UAAQN,MAAM,KAAd,KACAI,EAAAC,EAAAC,cAAA,UAAQN,MAAM,KAAd,KACAI,EAAAC,EAAAC,cAAA,UAAQN,MAAM,KAAd,KACAI,EAAAC,EAAAC,cAAA,UAAQN,MAAM,KAAd,OAGJI,EAAAC,EAAAC,cAAA,wBAEEF,EAAAC,EAAAC,cAAA,UAAQP,KAAK,WAAWW,SAAU7C,KAAK8B,cACpChC,OAAOgD,KAAK9C,KAAKgB,MAAMoB,YAAYW,IAAI,SAACL,GACvC,OACEH,EAAAC,EAAAC,cAAA,UAAQO,IAAKN,EAAIP,MAAOO,GACrBJ,EAAKtB,MAAMoB,WAAWM,QAMjCH,EAAAC,EAAAC,cAAA,SAAOhC,KAAK,SAASkC,UAAU,SAASR,MAAM,oBAlGjCc,cCkDRC,2DAlDb,SAAAA,IAAc,IAAArD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACZrD,EAAAI,EAAAC,KAAAF,OACKgB,MAAQ,CACXmC,eAAe,GAHLtD,oDAOd,WACEG,KAAK+B,SAAS,CAAEoB,eAAgBnD,KAAKgB,MAAMmC,sCAG7C,WAAS,IAAAd,EAAArC,KACPoD,EAAmDpD,KAAKJ,MAAhDmB,EAARqC,EAAQrC,SAAUE,EAAlBmC,EAAkBnC,OAAQE,EAA1BiC,EAA0BjC,SAAUD,EAApCkC,EAAoClC,WACpC,OACEqB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAY5B,GAC3BwB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OACEE,UAAU,WACVU,IAAG,GAAAC,OAAKnC,EAASoC,eACjBC,IAAG,GAAAF,OAAKnC,EAASoC,cAAd,UAELhB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,eAAyCzB,GACzCqB,EAAAC,EAAAC,cAAA,OACEe,IAAI,aACJH,IAAI,SACJV,UAAU,SACVc,QAAS,kBAAMpB,EAAKzC,MAAM8D,eAAe,cAG7CnB,EAAAC,EAAAC,cAAA,OACEE,UAAU,qBACVc,QAAS,kBAAMpB,EAAKsB,mBAEnB3D,KAAKgB,MAAMmC,cAAgB,OAAS,OAJvC,WAMAZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,QACEmB,MAAO,CACLC,WAAY7D,KAAKgB,MAAMmC,cAAgB,UAAY,WAFvD,WAKWlC,YA3CEgC,cC6BRa,8MA7Bb9C,MAAQ,CACN+C,MAAO,MAGTC,QAAU,SAAC5D,GACTA,EAAMC,iBACNR,EAAKD,MAAMqE,aAAapE,EAAKmB,MAAM+C,UAGrCG,kBAAoB,WAClBrE,EAAKkC,SAAS,CACZgC,MAAOlE,EAAKsE,OAAOhC,qDAIvB,WAAS,IAAAE,EAAArC,KACP,OACEuC,EAAAC,EAAAC,cAAA,QAAMG,SAAU5C,KAAKgE,SACnBzB,EAAAC,EAAAC,cAAA,SACE2B,YAAY,sBACZC,IAAK,SAACC,GAAD,OAAYjC,EAAK8B,OAASG,GAC/BzB,SAAU7C,KAAKkE,oBAEjB3B,EAAAC,EAAAC,cAAA,SAAOhC,KAAK,SAAS0B,MAAM,SAASQ,UAAU,mBAxBjCM,aCkLNsB,oDA7Kb,SAAAA,IAAc,IAAA1E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IACZ1E,EAAAI,EAAAC,KAAAF,OAcFwE,aAAe,WACblE,IAAEC,KAAK,CACLC,IAAG,mBAAA8C,OAAqBzD,EAAKmB,MAAMyD,MACnChE,KAAM,MACNc,QAAS,SAACC,GACR3B,EAAKkC,SAAS,CACZ2C,UAAWlD,EAAOkD,UAClBC,eAAgBnD,EAAOoD,gBACvBxC,WAAYZ,EAAOY,WACnByC,gBAAiBrD,EAAOsD,mBAE1BC,QAAQC,IAAInF,EAAKmB,MAAMoB,WAAW,KAGpCR,MAAO,SAACA,GACNC,MAAM,+DA9BEhC,EA2DdoF,cAAgB,SAACvC,GACfpC,IAAEC,KAAK,CACLC,IAAG,eAAA8C,OAAiBZ,EAAjB,cACHjC,KAAM,MACNc,QAAS,SAACC,GACR3B,EAAKkC,SAAS,CACZ2C,UAAWlD,EAAOkD,UAClBC,eAAgBnD,EAAOoD,gBACvBC,gBAAiBrD,EAAOsD,oBAI5BlD,MAAO,SAACA,GACNC,MAAM,+DAxEEhC,EA8EdoE,aAAe,SAACiB,GACd5E,IAAEC,KAAK,CACLC,IAAG,oBACHC,KAAM,OACNC,SAAU,OACVC,YAAa,mBACbC,KAAMC,KAAKC,UAAU,CAAEoE,WAAYA,IACnC9D,UAAW,CACTC,iBAAiB,GAEnBC,aAAa,EACbC,QAAS,SAACC,GACR3B,EAAKkC,SAAS,CACZ2C,UAAWlD,EAAOkD,UAClBC,eAAgBnD,EAAOoD,gBACvBC,gBAAiBrD,EAAOsD,oBAI5BlD,MAAO,SAACA,GACNC,MAAM,+DAlGEhC,EAwGd6D,eAAiB,SAAChB,GAAD,OAAQ,SAACyC,GACT,WAAXA,GACEC,OAAOC,QAAQ,kDACjB/E,IAAEC,KAAK,CACLC,IAAG,cAAA8C,OAAgBZ,GACnBjC,KAAM,SACNc,QAAS,SAACC,GACR3B,EAAK2E,gBAEP5C,MAAO,SAACA,GACNC,MAAM,gEAhHdhC,EAAKmB,MAAQ,CACX0D,UAAW,GACXD,KAAM,EACNE,eAAgB,EAChBvC,WAAY,GACZyC,gBAAiB,MAPPhF,uDAWd,WACEG,KAAKwE,yCAwBP,SAAWc,GAAK,IAAAjD,EAAArC,KACdA,KAAK+B,SAAS,CAAE0C,KAAMa,GAAO,kBAAMjD,EAAKmC,iDAG1C,WAGE,IAHiB,IAAAlC,EAAAtC,KACbuF,EAAc,GACdC,EAAUC,KAAKC,KAAK1F,KAAKgB,MAAM2D,eAAiB,IAFnCgB,EAAA,SAGRC,GACPL,EAAYM,KACVtD,EAAAC,EAAAC,cAAA,QACEO,IAAK4C,EACLjD,UAAS,YAAAW,OAAcsC,IAAMtD,EAAKtB,MAAMyD,KAAO,SAAW,IAC1DhB,QAAS,WACPnB,EAAKwD,WAAWF,KAGjBA,KATEA,EAAI,EAAGA,GAAKJ,EAASI,IAAKD,EAA1BC,GAaT,OAAOL,wBAkET,WAAS,IAAAQ,EAAA/F,KACP,OACEuC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,MACEgB,QAAS,WACPsC,EAAKvB,iBAFT,cAOAjC,EAAAC,EAAAC,cAAA,UACG3C,OAAOgD,KAAK9C,KAAKgB,MAAMoB,YAAYW,IAAI,SAACL,GAAD,OACtCH,EAAAC,EAAAC,cAAA,MACEO,IAAKN,EACLe,QAAS,WACPsC,EAAKd,cAAcvC,KAGpBqD,EAAK/E,MAAMoB,WAAWM,GACvBH,EAAAC,EAAAC,cAAA,OACEE,UAAU,WACVU,IAAG,GAAAC,OAAKyC,EAAK/E,MAAMoB,WAAWM,GAAIa,eAClCC,IAAG,GAAAF,OAAKyC,EAAK/E,MAAMoB,WAAWM,GAAIa,cAA/B,cAKXhB,EAAAC,EAAAC,cAACuD,EAAD,CAAQ/B,aAAcjE,KAAKiE,gBAE7B1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,uBACCzC,KAAKgB,MAAM0D,UAAU3B,IAAI,SAACkD,EAAGC,GAAJ,OAExB3D,EAAAC,EAAAC,cAAC0D,EAAD,CACEnD,IAAKiD,EAAEvD,GACP3B,SAAUkF,EAAElF,SACZE,OAAQgF,EAAEhF,OACVE,SAAU4E,EAAK/E,MAAMoB,WAAW6D,EAAE9E,UAClCD,WAAY+E,EAAE/E,WACdwC,eAAgBqC,EAAKrC,eAAeuC,EAAEvD,QAI1CH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmB3C,KAAKoG,6BAvKtBnD,aCsCZoD,oKAxCb,SAAMC,GACJlB,OAAOmB,SAASC,KAAOpB,OAAOmB,SAASE,OAASH,wBAGlD,WAAS,IAAAzG,EAAAG,KACP,OACEuC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,MACEgB,QAAS,WACP5D,EAAK6G,MAAM,MAFf,eAOAnE,EAAAC,EAAAC,cAAA,MACEgB,QAAS,WACP5D,EAAK6G,MAAM,MAFf,QAOAnE,EAAAC,EAAAC,cAAA,MACEgB,QAAS,WACP5D,EAAK6G,MAAM,UAFf,OAOAnE,EAAAC,EAAAC,cAAA,MACEgB,QAAS,WACP5D,EAAK6G,MAAM,WAFf,gBA7BazD,sBCoMN0D,2DAhMb,SAAAA,EAAY/G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IACjB9G,EAAAI,EAAAC,KAAAF,OA4BF4G,eAAiB,SAAAC,GAAsB,IAAnBpG,EAAmBoG,EAAnBpG,KAAmBqG,EAAAD,EAAbnE,UAAa,IAAAoE,EAAR,EAAQA,EACrCjH,EAAKkC,SAAS,CAAEgF,aAAc,CAAEtG,OAAMiC,OAAQ7C,EAAKmH,kBA9BlCnH,EAiCnBiC,aAAe,SAAC1B,GACdP,EAAKkC,SAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GAAiBM,EAAM6B,OAAOC,KAAO9B,EAAM6B,OAAOE,SAlCjCtC,EAqCnBmH,gBAAkB,WAChB,IAAMC,EAAiBnH,OAAAoH,EAAA,EAAApH,CAAOD,EAAKmB,MAAMiG,mBACrCpH,EAAKmB,MAAMmG,gBAAgBzE,IAC7BuE,EAAkBpB,KAAKhG,EAAKmB,MAAMmG,gBAAgBzE,IAGpDpC,IAAEC,KAAK,CACLC,IAAK,WACLC,KAAM,OACNC,SAAU,OACVC,YAAa,mBACbC,KAAMC,KAAKC,UAAU,CACnBsG,mBAAoBH,EACpBI,cAAexH,EAAKmB,MAAM+F,aAAarE,KAEzCtB,UAAW,CACTC,iBAAiB,GAEnBC,aAAa,EACbC,QAAS,SAACC,GACR3B,EAAKkC,SAAS,CACZuF,YAAY,EACZL,kBAAmBA,EACnBE,gBAAiB3F,EAAOT,SACxBwG,MAAO,GACPC,UAAUhG,EAAOT,YAIrBa,MAAO,SAACA,GACNC,MAAM,8DAnEOhC,EAyEnB4H,YAAc,SAACrH,GACbA,EAAMC,iBACN,IAAIqH,EAAW7H,EAAK8H,iBACpB9H,EAAKkC,SAAS,CACZ6F,WAAaF,EAAmC7H,EAAKmB,MAAM4G,WAAa,EAAhD/H,EAAKmB,MAAM4G,WACnCN,YAAY,KA9EGzH,EAkFnBgI,YAAc,WACZhI,EAAKkC,SAAS,CACZgF,aAAc,KACdE,kBAAmB,GACnBK,YAAY,EACZM,WAAY,EACZT,gBAAiB,GACjBI,MAAO,GACPC,UAAU,KA1FK3H,EAsInB8H,eAAiB,WACf,IAAMG,EAAcjI,EAAKmB,MAAMuG,MAE5BQ,QAAQ,+BAAgC,IACxCxE,cAIH,OAHoB1D,EAAKmB,MAAMmG,gBAAgBlG,OAC5CsC,cACAyE,MAAM,KACUC,MAAM,SAACC,GAAD,OAAQJ,EAAYK,SAASD,MA5ItDrI,EAAKmB,MAAQ,CACX+F,aAAc,KACdE,kBAAmB,GACnBK,YAAY,EACZlF,WAAY,GACZwF,WAAY,EACZT,gBAAiB,GACjBI,MAAO,GACPC,UAAU,GAVK3H,uDAcnB,WAAoB,IAAAwC,EAAArC,KAClBM,IAAEC,KAAK,CACLC,IAAG,cACHC,KAAM,MACNc,QAAS,SAACC,GACRa,EAAKN,SAAS,CAAEK,WAAYZ,EAAOY,cAGrCR,MAAO,SAACA,GACNC,MAAM,4FAuEZ,WAAgB,IAAAS,EAAAtC,KACd,OACEuC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAf,mBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBc,QAASzD,KAAK4G,gBAA7C,OAGC9G,OAAOgD,KAAK9C,KAAKgB,MAAMoB,YAAYW,IAAI,SAACL,GACvC,OACEH,EAAAC,EAAAC,cAAA,OACEO,IAAKN,EACLP,MAAOO,EACPC,UAAU,gBACVc,QAAS,kBACPnB,EAAKsE,eAAe,CAAEnG,KAAM6B,EAAKtB,MAAMoB,WAAWM,GAAKA,SAGxDJ,EAAKtB,MAAMoB,WAAWM,wCASrC,WACE,OACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,uBACuB3C,KAAKgB,MAAM4G,YAElCrF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAoBc,QAASzD,KAAK6H,aAAjD,mDAkBN,WACE,IAAIH,EAAW1H,KAAK2H,iBACpB,OACEpF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACZ3C,KAAKgB,MAAMmG,gBAAgBpG,UAE9BwB,EAAAC,EAAAC,cAAA,OAAKE,UAAS,GAAAW,OAAKoE,EAAW,UAAY,UACvCA,EAAW,oBAAsB,sBAEpCnF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAe3C,KAAKgB,MAAMmG,gBAAgBlG,QACzDsB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAAuBc,QAASzD,KAAKgH,iBACjD,IADH,gBAEgB,gCAMtB,WACE,OAxKqB,IAwKdhH,KAAKgB,MAAMiG,kBAAkBmB,QAClCpI,KAAKgB,MAAMwG,SACXxH,KAAKqI,mBACHrI,KAAKgB,MAAMsG,WACbtH,KAAKsI,sBAEL/F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACZ3C,KAAKgB,MAAMmG,gBAAgBpG,UAE9BwB,EAAAC,EAAAC,cAAA,QAAMG,SAAU5C,KAAKyH,aACnBlF,EAAAC,EAAAC,cAAA,SAAOhC,KAAK,OAAOyB,KAAK,QAAQW,SAAU7C,KAAK8B,eAC/CS,EAAAC,EAAAC,cAAA,SACEE,UAAU,sBACVlC,KAAK,SACL0B,MAAM,0CAOhB,WACE,OAAOnC,KAAKgB,MAAM+F,aAAe/G,KAAKuI,aAAevI,KAAKwI,uBA7LvCvF,cCoBRwF,8JAjBb,WACE,OACElG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACiG,EAAD,CAAQC,MAAI,IACZpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACErG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOF,KAAK,IAAIG,OAAK,EAACC,UAAWxE,IACjChC,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOF,KAAK,OAAOI,UAAWpJ,IAC9B4C,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOF,KAAK,QAAQI,UAAWpC,IAC/BpE,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOE,UAAWxE,cAVZtB,aCHlB+F,IAASC,OAAO1G,EAAAC,EAAAC,cAACyG,EAAD,MAASzH,SAASC,eAAe","file":"static/js/main.d084c6aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport '../stylesheets/FormView.css';\r\n\r\nclass FormView extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      question: '',\r\n      answer: '',\r\n      difficulty: 1,\r\n      category: 1,\r\n      categories: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    $.ajax({\r\n      url: `/categories`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({ categories: result.categories });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load categories. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  }\r\n\r\n  submitQuestion = (event) => {\r\n    event.preventDefault();\r\n    $.ajax({\r\n      url: '/questions', //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({\r\n        question: this.state.question,\r\n        answer: this.state.answer,\r\n        difficulty: this.state.difficulty,\r\n        category: this.state.category,\r\n      }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        document.getElementById('add-question-form').reset();\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to add question. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id='add-form'>\r\n        <h2>Add a New Trivia Question</h2>\r\n        <form\r\n          className='form-view'\r\n          id='add-question-form'\r\n          onSubmit={this.submitQuestion}\r\n        >\r\n          <label>\r\n            Question\r\n            <input type='text' name='question' onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            Answer\r\n            <input type='text' name='answer' onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            Difficulty\r\n            <select name='difficulty' onChange={this.handleChange}>\r\n              <option value='1'>1</option>\r\n              <option value='2'>2</option>\r\n              <option value='3'>3</option>\r\n              <option value='4'>4</option>\r\n              <option value='5'>5</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Category\r\n            <select name='category' onChange={this.handleChange}>\r\n              {Object.keys(this.state.categories).map((id) => {\r\n                return (\r\n                  <option key={id} value={id}>\r\n                    {this.state.categories[id]}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </label>\r\n          <input type='submit' className='button' value='Submit' />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormView;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/Question.css';\r\n\r\nclass Question extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      visibleAnswer: false,\r\n    };\r\n  }\r\n\r\n  flipVisibility() {\r\n    this.setState({ visibleAnswer: !this.state.visibleAnswer });\r\n  }\r\n\r\n  render() {\r\n    const { question, answer, category, difficulty } = this.props;\r\n    return (\r\n      <div className='Question-holder'>\r\n        <div className='Question'>{question}</div>\r\n        <div className='Question-status'>\r\n          <img\r\n            className='category'\r\n            alt={`${category.toLowerCase()}`}\r\n            src={`${category.toLowerCase()}.svg`}\r\n          />\r\n          <div className='difficulty'>Difficulty: {difficulty}</div>\r\n          <img\r\n            src='delete.png'\r\n            alt='delete'\r\n            className='delete'\r\n            onClick={() => this.props.questionAction('DELETE')}\r\n          />\r\n        </div>\r\n        <div\r\n          className='show-answer button'\r\n          onClick={() => this.flipVisibility()}\r\n        >\r\n          {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\r\n        </div>\r\n        <div className='answer-holder'>\r\n          <span\r\n            style={{\r\n              visibility: this.state.visibleAnswer ? 'visible' : 'hidden',\r\n            }}\r\n          >\r\n            Answer: {answer}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  getInfo = (event) => {\r\n    event.preventDefault();\r\n    this.props.submitSearch(this.state.query);\r\n  };\r\n\r\n  handleInputChange = () => {\r\n    this.setState({\r\n      query: this.search.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.getInfo}>\r\n        <input\r\n          placeholder='Search questions...'\r\n          ref={(input) => (this.search = input)}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <input type='submit' value='Submit' className='button' />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/App.css';\r\nimport Question from './Question';\r\nimport Search from './Search';\r\nimport $ from 'jquery';\r\n\r\nclass QuestionView extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questions: [],\r\n      page: 1,\r\n      totalQuestions: 0,\r\n      categories: {},\r\n      currentCategory: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  getQuestions = () => {\r\n    $.ajax({\r\n      url: `/questions?page=${this.state.page}`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          categories: result.categories,\r\n          currentCategory: result.current_category,\r\n        });\r\n        console.log(this.state.categories[1]);\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  selectPage(num) {\r\n    this.setState({ page: num }, () => this.getQuestions());\r\n  }\r\n\r\n  createPagination() {\r\n    let pageNumbers = [];\r\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\r\n    for (let i = 1; i <= maxPage; i++) {\r\n      pageNumbers.push(\r\n        <span\r\n          key={i}\r\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\r\n          onClick={() => {\r\n            this.selectPage(i);\r\n          }}\r\n        >\r\n          {i}\r\n        </span>\r\n      );\r\n    }\r\n    return pageNumbers;\r\n  }\r\n\r\n  getByCategory = (id) => {\r\n    $.ajax({\r\n      url: `/categories/${id}/questions`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  submitSearch = (searchTerm) => {\r\n    $.ajax({\r\n      url: `/questions/search`, //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({ searchTerm: searchTerm }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  questionAction = (id) => (action) => {\r\n    if (action === 'DELETE') {\r\n      if (window.confirm('are you sure you want to delete the question?')) {\r\n        $.ajax({\r\n          url: `/questions/${id}`, //TODO: update request URL\r\n          type: 'DELETE',\r\n          success: (result) => {\r\n            this.getQuestions();\r\n          },\r\n          error: (error) => {\r\n            alert('Unable to load questions. Please try your request again');\r\n            return;\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='question-view'>\r\n        <div className='categories-list'>\r\n          <h2\r\n            onClick={() => {\r\n              this.getQuestions();\r\n            }}\r\n          >\r\n            Categories\r\n          </h2>\r\n          <ul>\r\n            {Object.keys(this.state.categories).map((id) => (\r\n              <li\r\n                key={id}\r\n                onClick={() => {\r\n                  this.getByCategory(id);\r\n                }}\r\n              >\r\n                {this.state.categories[id]}\r\n                <img\r\n                  className='category'\r\n                  alt={`${this.state.categories[id].toLowerCase()}`}\r\n                  src={`${this.state.categories[id].toLowerCase()}.svg`}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Search submitSearch={this.submitSearch} />\r\n        </div>\r\n        <div className='questions-list'>\r\n          <h2>Questions</h2>\r\n          {this.state.questions.map((q, ind) => (\r\n            \r\n            <Question\r\n              key={q.id}\r\n              question={q.question}\r\n              answer={q.answer}\r\n              category={this.state.categories[q.category]}\r\n              difficulty={q.difficulty}\r\n              questionAction={this.questionAction(q.id)}\r\n            />\r\n          ))}\r\n          \r\n          <div className='pagination-menu'>{this.createPagination()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionView;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/Header.css';\r\n\r\nclass Header extends Component {\r\n  navTo(uri) {\r\n    window.location.href = window.location.origin + uri;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='App-header'>\r\n        <h1\r\n          onClick={() => {\r\n            this.navTo('');\r\n          }}\r\n        >\r\n          Udacitrivia\r\n        </h1>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('');\r\n          }}\r\n        >\r\n          List\r\n        </h2>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('/add');\r\n          }}\r\n        >\r\n          Add\r\n        </h2>\r\n        <h2\r\n          onClick={() => {\r\n            this.navTo('/play');\r\n          }}\r\n        >\r\n          Play\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport '../stylesheets/QuizView.css';\r\n\r\nconst questionsPerPlay = 5;\r\n\r\nclass QuizView extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      quizCategory: null,\r\n      previousQuestions: [],\r\n      showAnswer: false,\r\n      categories: {},\r\n      numCorrect: 0,\r\n      currentQuestion: {},\r\n      guess: '',\r\n      forceEnd: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    $.ajax({\r\n      url: `/categories`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({ categories: result.categories });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load categories. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  }\r\n\r\n  selectCategory = ({ type, id = 0 }) => {\r\n    this.setState({ quizCategory: { type, id } }, this.getNextQuestion);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  getNextQuestion = () => {\r\n    const previousQuestions = [...this.state.previousQuestions];\r\n    if (this.state.currentQuestion.id) {\r\n      previousQuestions.push(this.state.currentQuestion.id);\r\n    }\r\n\r\n    $.ajax({\r\n      url: '/quizzes', //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({\r\n        previous_questions: previousQuestions,\r\n        quiz_category: this.state.quizCategory.id,\r\n      }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        this.setState({\r\n          showAnswer: false,\r\n          previousQuestions: previousQuestions,\r\n          currentQuestion: result.question,\r\n          guess: '',\r\n          forceEnd: result.question ? false : true,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load question. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  submitGuess = (event) => {\r\n    event.preventDefault();\r\n    let evaluate = this.evaluateAnswer();\r\n    this.setState({\r\n      numCorrect: !evaluate ? this.state.numCorrect : this.state.numCorrect + 1,\r\n      showAnswer: true,\r\n    });\r\n  };\r\n\r\n  restartGame = () => {\r\n    this.setState({\r\n      quizCategory: null,\r\n      previousQuestions: [],\r\n      showAnswer: false,\r\n      numCorrect: 0,\r\n      currentQuestion: {},\r\n      guess: '',\r\n      forceEnd: false,\r\n    });\r\n  };\r\n\r\n  renderPrePlay() {\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='choose-header'>Choose Category</div>\r\n        <div className='category-holder'>\r\n          <div className='play-category' onClick={this.selectCategory}>\r\n            ALL\r\n          </div>\r\n          {Object.keys(this.state.categories).map((id) => {\r\n            return (\r\n              <div\r\n                key={id}\r\n                value={id}\r\n                className='play-category'\r\n                onClick={() =>\r\n                  this.selectCategory({ type: this.state.categories[id], id })\r\n                }\r\n              >\r\n                {this.state.categories[id]}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFinalScore() {\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='final-header'>\r\n          Your Final Score is {this.state.numCorrect}\r\n        </div>\r\n        <div className='play-again button' onClick={this.restartGame}>\r\n          Play Again?\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  evaluateAnswer = () => {\r\n    const formatGuess = this.state.guess\r\n      // eslint-disable-next-line\r\n      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\r\n      .toLowerCase();\r\n    const answerArray = this.state.currentQuestion.answer\r\n      .toLowerCase()\r\n      .split(' ');\r\n    return answerArray.every((el) => formatGuess.includes(el));\r\n  };\r\n\r\n  renderCorrectAnswer() {\r\n    let evaluate = this.evaluateAnswer();\r\n    return (\r\n      <div className='quiz-play-holder'>\r\n        <div className='quiz-question'>\r\n          {this.state.currentQuestion.question}\r\n        </div>\r\n        <div className={`${evaluate ? 'correct' : 'wrong'}`}>\r\n          {evaluate ? 'You were correct!' : 'You were incorrect'}\r\n        </div>\r\n        <div className='quiz-answer'>{this.state.currentQuestion.answer}</div>\r\n        <div className='next-question button' onClick={this.getNextQuestion}>\r\n          {' '}\r\n          Next Question{' '}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPlay() {\r\n    return this.state.previousQuestions.length === questionsPerPlay ||\r\n      this.state.forceEnd ? (\r\n      this.renderFinalScore()\r\n    ) : this.state.showAnswer ? (\r\n      this.renderCorrectAnswer()\r\n    ) : (\r\n      <div className='quiz-play-holder'>\r\n        <div className='quiz-question'>\r\n          {this.state.currentQuestion.question}\r\n        </div>\r\n        <form onSubmit={this.submitGuess}>\r\n          <input type='text' name='guess' onChange={this.handleChange} />\r\n          <input\r\n            className='submit-guess button'\r\n            type='submit'\r\n            value='Submit Answer'\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.state.quizCategory ? this.renderPlay() : this.renderPrePlay();\r\n  }\r\n}\r\n\r\nexport default QuizView;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './stylesheets/App.css';\r\nimport FormView from './components/FormView';\r\nimport QuestionView from './components/QuestionView';\r\nimport Header from './components/Header';\r\nimport QuizView from './components/QuizView';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Header path />\r\n        <Router>\r\n          <Switch>\r\n            <Route path='/' exact component={QuestionView} />\r\n            <Route path='/add' component={FormView} />\r\n            <Route path='/play' component={QuizView} />\r\n            <Route component={QuestionView} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stylesheets/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}